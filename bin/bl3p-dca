#!/usr/bin/env php
<?php

require_once __DIR__.'/../vendor/autoload.php';

use Jorijn\Bl3pDca\DependencyInjection\AddCommandsCompilerPass;
use Symfony\Component\Config\ConfigCache;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Dumper\PhpDumper;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Symfony\Component\Dotenv\Dotenv;

if (file_exists(__DIR__.'/../.env')) {
    $dotenv = new Dotenv();
    $dotenv->loadEnv(__DIR__.'/../.env');
}

$containerCache = __DIR__.'/../var/cache/container.php';
$containerConfigCache = new ConfigCache($containerCache, $_SERVER['DEBUG'] ?? false);

if (!$containerConfigCache->isFresh()) {
    $containerBuilder = new ContainerBuilder();

    // load the DI config
    $loader = new YamlFileLoader($containerBuilder, new FileLocator(__DIR__.'/../config/'));
    $loader->load('services.yaml');

    $containerBuilder->addCompilerPass(new AddCommandsCompilerPass());
    $containerBuilder->compile();

    // write the compiled container to file
    $dumper = new PhpDumper($containerBuilder);
    $containerConfigCache->write(
        $dumper->dump(['class' => 'Bl3pDcaContainer']),
        $containerBuilder->getResources()
    );
}

require_once $containerCache;
$container = new Bl3pDcaContainer();
$container->get('dca.application')->run();
